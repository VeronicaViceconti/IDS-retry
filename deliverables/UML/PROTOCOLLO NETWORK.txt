PROTOCOLLO NETWORK
Introduzione
Client ha una queue per i messaggi che arrivano dal server; si collega a un handler lato server che gli permette di inserire messaggi nella queue del server; il server legge dalla queue ed esegue le azioni; la modifica del model comporta l’invio dei messaggi di risposta al client da parte del proprio handler.
RMI
Quando il server viene avviato, viene creata la prima instanza InterfaceClientHandlerRMI, oggetto remoto lato server che rappresenta l’interfaccia tra clientrmi e il server,  ed è anche ascoltatore del model. Quando un client si connette, ottiene il riferimento al InterfaceClientHandlerRMI e, tramite un metodo apposito, crea un nuovo oggetto remoto, che sarà la vera interfaccia con quel client; questo permette di ottenere un handler per client. L’InterfaceClientHandlerRMI ha poi una queue del server su cui inserisce tutti i messaggi che arrivano dal client e che verranno eseguiti dal server quando può. Inoltre, la correlazione tra client e handler viene inserita in una hashmap e grazie al pattern observer–observable, quando una modifica avviene all’interno del game, tramite la notify i vari handler inviano dati alla queue del client, che aggiorna i dati della view. La view, invece, si interfaccia con l’utente.
SOCKET
Quando il server viene avviato, viene creato un thread per connessioni client-socket, che rappresenta l’interfaccia tra client-socket e il server, ed è anche ascoltatore del model. Quando un client si connette, viene aperto un socket che permette la comunicazione, che sarà la vera interfaccia con quel client; questo permette di ottenere un handler per client. L’InterfaceClientSOCKET-RMI ha poi una queue del server su cui inserisce tutti i messaggi che arrivano dal client e che verranno eseguiti dal server quando può. Inoltre, la correlazione tra client e handler viene inserita in una hashmap e grazie al pattern observer–observable, quando una modifica avviene all’interno del game, tramite la notify i vari handler inviano dati alla queue del client, che aggiorna i dati della view. La view, invece, si interfaccia con l’utente.